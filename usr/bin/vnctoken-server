#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2019, OpenNebula Project, OpenNebula Systems                #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

if [ -z "$ONE_LOCATION" ]; then
    ONEVNC_PID=/var/run/one/vnctoken.pid
    ONEVNC_SERVER=/usr/lib/one/vnctoken/vnctoken-server.rb
    ONEVNC_LOCK_FILE=/var/lock/one/.vnctoken.lock
    ONEVNC_LOG=/var/log/one/vnctoken.log
    ONEVNC_LOG_ERROR=/var/log/one/vnctoken.error
    ONEVNC_CONF=/etc/one/vnctoken-server.conf
else
    ONEVNC_PID=$ONE_LOCATION/var/vnctoken.pid
    ONEVNC_SERVER=$ONE_LOCATION/lib/vnctoken/vnctoken-server.rb
    ONEVNC_LOCK_FILE=$ONE_LOCATION/var/.vnctoken.lock
    ONEVNC_LOG=$ONE_LOCATION/var/vnctoken.log
    ONEVNC_LOG_ERROR=$ONE_LOCATION/var/vnctoken.error
    ONEVNC_CONF=$ONE_LOCATION/etc/vnctoken-server.conf
fi

setup()
{
  if [ -f $ONEVNC_LOCK_FILE ]; then
    if [ -f  $ONEVNC_PID ]; then
      ONEVNCPID=`cat $ONEVNC_PID`
      ps $ONEVNCPID &> /dev/null
      if [ $? -eq 0 ]; then
        echo -n "OneGate Server is still running (PID:$ONEVNCPID). Please "
        echo "try 'vnctoken-server stop' first."
        exit 1
      fi
    fi
    echo "Stale .lock detected. Erasing it."
    rm $ONEVNC_LOCK_FILE
  fi
}


start()
{
  if [ ! -f "$ONEVNC_SERVER" ]; then
    echo "Cannot find $ONEVNC_SERVER."
    exit 1
  fi

  # Start the vnctoken daemon
  touch $ONEVNC_LOCK_FILE
  ruby $ONEVNC_SERVER > $ONEVNC_LOG 2>$ONEVNC_LOG_ERROR &
  LASTPID=$!

  if [ $? -ne 0 ]; then
    echo "Error executing vnctoken-server."
    echo "Check $ONEVNC_LOG_ERROR and $ONEVNC_LOG for more information"
    exit 1
  else
    echo $LASTPID > $ONEVNC_PID
  fi

  sleep 1
  ps $LASTPID &> /dev/null

  if [ $? -ne 0 ]; then
    echo "Error executing vnctoken-server."
    echo "Check $ONEVNC_LOG_ERROR and $ONEVNC_LOG for more information"
    exit 1
  fi

  echo "vnctoken-server started"
}

#
# Function that stops the daemon/service
#
stop()
{
  if [ ! -f $ONEVNC_PID ]; then
    echo "Couldn't find vnctoken-server process pid."
    exit 1
  fi

  # Kill the vnctoken daemon
  kill -INT `cat $ONEVNC_PID` &> /dev/null

  # Remove pid files
  rm -f $ONEVNC_LOCK_FILE &> /dev/null
  rm -f $ONEVNC_PID &> /dev/null

  echo "vnctoken-server stopped"
}

case "$1" in
  start)
    setup
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    setup
    start
    ;;
  *)
    echo "Usage: vnctoken-server {start|stop|restart}" >&2
    exit 3
    ;;
esac
